package hello;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
/**
 * JNA Wrapper for library <b>hello</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class HelloLibrary implements Library {
	public static final String JNA_LIBRARY_NAME = "hello";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(HelloLibrary.JNA_LIBRARY_NAME);
	static {
		Native.register(HelloLibrary.class, HelloLibrary.JNA_NATIVE_LIB);
	}
	/**
	 * Original signature : <code>void hello_sayHello(const char*, unsigned)</code><br>
	 * <i>native declaration : line 8</i><br>
	 * @deprecated use the safer methods {@link #hello_sayHello(java.lang.String, int)} and {@link #hello_sayHello(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native void hello_sayHello(Pointer who, int n);
	/**
	 * Original signature : <code>void hello_sayHello(const char*, unsigned)</code><br>
	 * <i>native declaration : line 8</i>
	 */
	public static native void hello_sayHello(String who, int n);
}
